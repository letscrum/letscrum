syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "apis/general/v1/letscrum.proto";
import "apis/project/v1/project.proto";
import "apis/user/v1/user.proto";

option go_package = "github.com/letscrum/letscrum/apis/letscrum/v1";

service Letscrum {
  rpc GetVersion(google.protobuf.Empty) returns (letscrum.apis.general.v1.GetVersionResponse) {
    option (google.api.http) = {
      get: "/apis/v1/version"
    };
  }

  rpc SignIn(letscrum.apis.user.v1.SignInRequest) returns (letscrum.apis.user.v1.SignInResponse) {
    option (google.api.http) = {
      get: "/apis/v1/signin"
    };
  }
}

service Project {
  rpc CreateProject(letscrum.apis.project.v1.CreateProjectRequest) returns (letscrum.apis.project.v1.CreateProjectResponse) {
    option (google.api.http) = {
      post: "/apis/v1/projects"
    };
  }

  rpc UpdateProject(letscrum.apis.project.v1.UpdateProjectRequest) returns (letscrum.apis.project.v1.UpdateProjectResponse) {
    option (google.api.http) = {
      put: "/apis/v1/projects/{name}"
    };
  }

  rpc DeleteProject(letscrum.apis.project.v1.DeleteProjectRequest) returns (letscrum.apis.project.v1.DeleteProjectResponse) {
    option (google.api.http) = {
      delete: "/apis/v1/projects/{name}"
    };
  }

  rpc ListProject(letscrum.apis.project.v1.ListProjectRequest) returns (letscrum.apis.project.v1.ListProjectResponse) {
    option (google.api.http) = {
      get: "/apis/v1/projects"
    };
  }

  rpc GetProject(letscrum.apis.project.v1.GetProjectRequest) returns (letscrum.apis.project.v1.GetProjectResponse) {
    option (google.api.http) = {
      get: "/apis/v1/projects/{name}"
    };
  }

  rpc GetSprint(letscrum.apis.project.v1.CreateSprintRequest) returns (letscrum.apis.project.v1.CreateSprintResponse) {
    option (google.api.http) = {
      get: "/apis/v1/projects/{name}/sprints"
    };
  }
}
